#!/bin/bash
DATASET_NAME=Bell.12.21.2015
MY_NAME=BillyFournier

#This is a paired end workflow for the prokaryotic primers CAGCMGCCGCGGTAA and TACNVGGGTATCTAATCC and Bacterial primers CCTACGGGNGGCWGCAG and GACTACHVGGGTATCTAATCCthat uses usearch for to merge reads and length filters based on read quality before merging

<< COMMENT_READIN

read -p "Enter Data Sets Name (Folder in DATA_SETS): " DATASET_NAME
echo ''

read -p "Enter Your Name, i.e. JeffBrady: " MY_NAME
MY_NAME=${MY_NAME:-JeffBrady}
echo ''

read -p "Press ENTER to Recieve a DEFAULT Project Name:  " PROJECT_NAME
DATE=`date +%d`.`date +%m`.`date +%Y`
PROJECT_NAME=${PROJECT_NAME:-$DATASET_NAME.$DATE}
echo $PROJECT_NAME

COMMENT_READIN


DATE= $(date +".%m.%d.%Y_%H:%M")
## BE SURE to update 1, 2 , 3, 4 below and ensure they are correct.
###~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#1# 	PATH to the Raw Data you are analysing on the Storage drive  
###~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
DATASTORAGEDIR=/media/STORAGE/DATA_SETS/$DATASET_NAME
#DATASTORAGEDIR=/media/jeff/STORAGE/DATA_SETS/$DATASET_NAME


###~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#2# 	PATH to "your" Analysis director EXAMPLE: $HOME/Analysis/YourName
###~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WORKDIR=$HOME/Analysis/$MY_NAME

###~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#3# 	PATH to Project directory EXAMPLE: $WORKDIR/DataSetName_TodaysDate
###~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
export PROJECTDIR=$WORKDIR/Analysis_$MY_NAME$DATE
#PROJECTDIR=$WORKDIR/$PROJECT_NAME    This needs some consideration


###~~~~~~~~~~~~~~~~~~~~~~~~~~~
#4#  	PATH to Drive5 scripts
###~~~~~~~~~~~~~~~~~~~~~~~~~~~
DRIVE5STORAGE=/media/STORAGE/drive5

###~~~~~~~~~~~~~~~~~~~~~~~~~~~
#4#  	PATH to python scripts
###~~~~~~~~~~~~~~~~~~~~~~~~~~~
PYTHONSTORAGE=/media/STORAGE/python

##########################################################################
##########################################################################
##########################################################################
##########################################################################


#PATH to Raw Data
DATADIR=$PROJECTDIR/DATA
#PATH to Usearch Output
USEARCHDIR=$PROJECTDIR/Usearch_Output
SCRIPTSDIR=$PROJECTDIR/scripts




mkdir -p $WORKDIR
mkdir -p $PROJECTDIR
mkdir -p $DATADIR
mkdir -p $USEARCHDIR
mkdir -p $SCRIPTSDIR


####  PIPLELINE LOG file setup  ####
LOGFILE="$PROJECTDIR/pipeline.log"
touch $LOGFILE
exec >  >(tee $LOGFILE)
exec 2>&1
echo Log Start
date +%r

find $DRIVE5STORAGE -type f -name 'fasta_number.py' -exec cp {} $SCRIPTSDIR/ \;
find $DRIVE5STORAGE -type f -name 'die.py' -exec cp {} $SCRIPTSDIR/ \;
find $DRIVE5STORAGE -type f -name 'uc2otutab_mod.py' -exec cp {} $SCRIPTSDIR/ \;
find $DRIVE5STORAGE -type f -name 'uc.py' -exec cp {} $SCRIPTSDIR/ \;
find $DRIVE5STORAGE -type f -name 'progress.py' -exec cp {} $SCRIPTSDIR/ \;
find $DRIVE5STORAGE -type f -name 'fasta.py' -exec cp {} $SCRIPTSDIR/ \;
find $PYTHONSTORAGE -type f -name 'remove_unused_barcodes.py' -exec cp {} $SCRIPTSDIR/ \;
find $PYTHONSTORAGE -type f -name 'fastqCombinePairedEnd.py' -exec cp {} $SCRIPTSDIR/ \;
find /media/jeff/STORAGE/DATA_SETS -type f -name 'ReadMe.txt' -exec cp {} $PROJECTDIR/ \;
find $DATASTORAGEDIR -type f -name 'PipelineScript' -exec cp {} $PROJECTDIR/ \;

# Finding gold.fasta

if [ "$(find /media/STORAGE/drive5 -type f -name '*gold.fasta*')" ]; then
	echo ''    
	echo "gold.fasta has been found."
	GOLDFASTA=`find /media/STORAGE/drive5 -type f -name '*gold.fasta*'`
	echo "gold.fasta is located at $GOLDFASTA"
	echo ''
else    
	echo -e "\n++++++++ WARNING: gold.fasta not found. ++++++++++++"
	echo 'gold.fasta not found'
	echo 'Downloading gold.fasta'	
	wget -O /media/STORAGE/drive5/gold.fasta -nc http://drive5.com/uchime/gold.fa
	exit 1
fi

printf '\n\n'
sleep 1


################################################
# Copying index1 to the working data directory #
################################################
if [ "$(find $DATADIR -type f -name '*index1*')" ]; then
	echo ''    
	echo "***WARNING: index1 has already been copied to $DATADIR"
else
	find $DATASTORAGEDIR -type f -name '*_I1_*' -exec cp {} $DATADIR/index1.fastq.gz \;
	echo ''    
	echo "index1 has been copied to $DATADIR"
fi
sleep 1

################################################
# Copying index2 to the working data directory #
################################################
if [ "$(find $DATADIR -type f -name '*index2*')" ]; then
	echo ''    
	echo "***WARNING: index2 has already been copied to $DATADIR"
else
	find $DATASTORAGEDIR -type f -name '*_I2_*' -exec cp {} $DATADIR/index2.fastq.gz \;
	echo ''    
	echo "index2 has been copied to $DATADIR"
fi
sleep 1

###############################################
# Copying read1 to the working data directory #
###############################################
if [ "$(find $DATADIR -type f -name '*read1*')" ]; then
	echo ''    
	echo "***WARNING: read1 has already been copied to $DATADIR"
else
	find $DATASTORAGEDIR -maxdepth 1 -type f -name '*_R1_*' -exec cp {} $DATADIR/read1.fastq.gz \;
	echo ''    
	echo "read1 has been copied to $DATADIR"
fi
sleep 1

###############################################
# Copying read2 to the working data directory #
###############################################
if [ "$(find $DATADIR -type f -name '*read2*')" ]; then
	echo ''    
	echo "***WARNING: read2 has already been copied to $DATADIR"
else
	find $DATASTORAGEDIR -maxdepth 1 -type f -name '*_R2_*' -exec cp {} $DATADIR/read2.fastq.gz \;
	echo ''    
	echo "read2 has been copied to $DATADIR"
fi
sleep 10

##########################################################
# Copying the mapping file to the working data directory #
##########################################################
if [ "$(find $DATADIR -type f -iname '*mapping*')" ]; then
	echo ''  
	MAPPINGFILE=`find $DATADIR -type f -iname '*mapping*'`  
	echo "***WARNING: Mapping File has already been copied to $MAPPINGFILE"
else	
	find $DATASTORAGEDIR -type f -iname '*mapping*' -exec cp {} $DATADIR/ \;
	MAPPINGFILE=`find $DATADIR -type f -iname '*mapping*'`
	echo ''    
	echo "Mapping File has been copied to $MAPPINGFILE"

fi
sleep 1


#############################################################
#############################################################
#############################################################
#############################################################


echo ''
echo "Unzipping files in *** $DATADIR ***"
gunzip $DATADIR/index1.fastq.gz
echo "gunzip 1 of 4 COMPLETE"
gunzip $DATADIR/index2.fastq.gz
echo "gunzip 2 of 4 COMPLETE"
gunzip $DATADIR/read1.fastq.gz
echo "gunzip 3 of 4 COMPLETE"
gunzip $DATADIR/read2.fastq.gz
echo "gunzip 4 of 4 COMPLETE"




<< COMMENT
COMMENT


### START SCRIPT HERE

